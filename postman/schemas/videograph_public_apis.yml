openapi: 3.0.0
info:
    title: Videograph API
    description: >-
        This is a public workspace for Videograph APIs


        ## Overview


        This workspace is meant to do the work of defining and evolving collections
        for documenting, mocking, testing, and integrating. All APIs and their
        collections are all work in progress


        ## Authentication & Authorization


        All the apis are secured/protected and can be accessed only by using api
        accesstoken and secret generated from dashboard for an organization's
        environment.


        An api access token's scope is limited to an organization's environment and
        so with the APIs we can manage assets within the environment. In addition
        api token can be granted only limited read/write access to product types
        which provides authorization
    version: 1.0.0
servers:
    - url: https://api.videograph.ai
      description: Production
components:
    securitySchemes:
        basicAuth:
            type: http
            scheme: basic
    schemas:
        Video:
            description: Video description
            required:
                - url
            type: object
            properties:
                url:
                    type: string
                    description: Provide a source Video/content url.
                start_offset:
                    type: integer
                    format: int64
                    description: Mention clip start time in seconds from start of source video
                end_offset:
                    type: integer
                    format: int64
                    description: Mention clip end time in seconds from start of source video
        Watermark:
            description: Watermark description
            required:
                - url
                - x_pos
                - y_pos
            type: object
            properties:
                url:
                    type: string
                    description: Provide source url of the image to be used as watermark. 
                x_pos:
                    type: string
                    description: X-axis position in pixels ex-10px
                y_pos:
                    type: string
                    description: Y-axis position in pixels ex-10px
                x_margin:
                    type: string
                    description: X-axis margin in pixel or percentage ex-10px/10%
                y_margin:
                    type: string
                    description: Y-axis margin in pixel or percentage ex-10px/10%
                x_align:
                    type: string
                    description: X-axis alignment, allowed values left/center/right
                    enum:
                        - left
                        - center
                        - right
                y_align:
                    type: string
                    description: Y-axis alignment, allowed values top/middle/bottom
                    enum:
                        - top
                        - middle
                        - bottom
                width:
                    type: string
                    description: Width of the image in pixel or percentage ex-10px/10%
                height:
                    type: string
                    description: height of the image in pixel or percentage ex-10px/10%
                opacity:
                    type: string
                    description: Control opacity of the watermark image, mentioned it in percentage ex-90%
        Subtitle:
            description: Subtitle description
            required:
                - url
                - name
                - language_code
                - support_closed_captions
            type: object
            properties:
                url:
                    type: string
                    description: Provide source url of Subtitle file.
                name:
                    type: string
                    description: Name of subtitle ex-English US
                language_code:
                    type: string
                    description: Mention Language code ex-en_US
                support_closed_captions:
                    type: boolean
                    description: Does your subtitle support closed captions (CC), allowed values true/false
        Metadata:
            description: Metadata as key value pairs
            required:
                - key
                - value
            type: object
            properties:
                key:
                    type: string
                    description: The constant that defines the data set ex-color
                value:
                    type: string
                    description: A variable whihc belongs to the data set ex-blue
        CreateContent:
            description: Create content description
            type: object
            required:
                - title
                - video
                - playback_policy
            properties:
                title:
                    type: string
                    description: Provide a title for your content.
                description:
                    type: string
                    description: Describe your content.
                video:
                    type: array
                    description: Provide the source url to download the content. If you want to create video clips from the video then pass on the start time and end time of the clip along with source url.
                    items:
                        $ref: "#/components/schemas/Video"
                watermark:
                    type: array
                    description: Watermark details on video content
                    items:
                        $ref: "#/components/schemas/Watermark"
                subtitle:
                    type: array
                    description: Add Subtitles to video content
                    items:
                        $ref: "#/components/schemas/Subtitle"
                tags:
                    type: array
                    description: Provide a list of tage that best describe your content.
                    items:
                        type: string
                metadata:
                    type: array
                    description: Provide content metadata as key value pairs. 
                    items:
                        $ref: "#/components/schemas/Metadata"
                playback_policy:
                    type: array
                    description: Playback policies. Allowed are public, signed or both
                    items:
                        type: string
                        enum:
                            - public
                            - signed
                mp4_support:
                    type: boolean
                    description: Is MP4 generation supported
                save_original_copy:
                    type: boolean
                    description: Is original copy to be saved
        UpdateContent:
            type: object
            properties:
                title:
                    type: string
                    description: Content title/name
                description:
                    type: string
                    description: Content description
                tags:
                    type: array
                    items:
                        type: string
                    description: Content tags
                metadata:
                    type: array
                    items:
                        $ref: "#/components/schemas/Metadata"
                    description: Content metadata
                save_original_copy:
                    type: boolean
                    description: Is original copy to be saved
        CreateContentClip:
            type: object
            required:
                - startTimeInSecs
                - endTimeInSecs
            properties:
                startTimeInSecs:
                    type: integer
                    format: int64
                    description: Start time of clip in secs of original video
                endTimeInSecs:
                    type: integer
                    format: int64
                    description: End time of clip in secs of original video
        CreateContentThumbnail:
            type: object
            required:
                - videoPositionInSec
                - width
                - height
            properties:
                videoPositionInSec:
                    type: integer
                    format: int64
                    description: Position of video
                width:
                    type: integer
                    format: int64
                    description: Width of thumbnail
                height:
                    type: integer
                    format: int64
                    description: Height of thumbnail
        CreateDirectUploadContent:
            description: Content description
            type: object
            required:
                - title
                - playback_policy
            properties:
                title:
                    type: string
                    description: Content title/name
                description:
                    type: string
                    description: Content description
                watermark:
                    type: array
                    description: Add watermark image on video content
                    items:
                        $ref: "#/components/schemas/Watermark"
                subtitle:
                    type: array
                    description: Add Subtitles to video content
                    items:
                        $ref: "#/components/schemas/Subtitle"
                tags:
                    type: array
                    description: Content tags
                    items:
                        type: string
                metadata:
                    type: array
                    description: Content metadata as key value pairs
                    items:
                        $ref: "#/components/schemas/Metadata"
                playback_policy:
                    type: array
                    description: Playback policies. Allowed are public, signed or both
                    items:
                        type: string
                        enum:
                            - public
                            - signed
                mp4_support:
                    type: boolean
                    description: Is MP4 generation supported
                save_original_copy:
                    type: boolean
                    description: Is original copy to be saved
        CreateDirectUpload:
            type: object
            required:
                - file_name
            properties:
                file_name:
                    type: string
                    description: Name of the file
                timeout:
                    type: integer
                    format: int64
                    description: Timeout of the file in seconds
                cors_origin:
                    type: string
                    description: Cors origin ex - Allowed domain 
                content:
                    $ref: "#/components/schemas/CreateDirectUploadContent"
        CreateLiveStream:
            type: object
            required:
                - name
                - region
                - record
            properties:
                name:
                    type: string
                    description: Name of the livestream
                region:
                    type: string
                    description: Region for creation ex - us-east-1
                record:
                    type: boolean
                    description: Indicates if its liverecording (true) or streaming (false)
        UpdateLiveStream:
            type: object
            properties:
                title:
                    type: string
                    description: Livestream title/name
                description:
                    type: string
                    description: Livestream description
                tags:
                    type: array
                    description: Livestream tags
                    items:
                        type: string
                metadata:
                    type: array
                    description: Livestream metadata as keyvalue pair
                    items:
                        $ref: "#/components/schemas/Metadata"
                mp4_support:
                    type: boolean
                    description: Is mp4 generation supported
        CreateLiveStreamClip:
            type: object
            required:
                - startTime
                - endTime
            properties:
                startTime:
                    type: integer
                    format: int64
                    description: Clip start time in secs from epoc
                endTime:
                    type: integer
                    format: int64
                    description: Clip end time in secs from epoc
        SigningKey:
            required:
                - productTypeId
                - environmentUUID
            type: object
            properties:
                productTypeId:
                    type: integer
                    format: int64
                    enum:
                        - 1
                    description: Product type for which key is generated. 1 for Video/Live
                environmentUUID:
                    type: string
                    description: Environment's identifier as UUID. Obtained from videograph dashboard
tags:
    - name: Contents
      description:
          Content and its assets (subtitles and thumbnails) management related apis
          are grouped here
    - name: Content Subtitles
      description: CRUD on content's subtitles are listed here
    - name: Content Clips
      description: CRUD on content clips
    - name: Content Thumbnails
      description: CRUD on content's thumbnail are listed here
    - name: Content Direct Uploads
      description: CRUD on content's direct uploades
    - name: URL Signing Keys
      description: CRUD on url signing keys
    - name: Live Streams
      description: CRUD on live streams, recordings and clips
paths:
    /video/services/api/v1/contents:
        post:
            tags:
                - Contents
            summary: Create Content
            description: >-
                **API to create a content (video/audio) from the asset url which is
                publicly accessible**


                *   Multiple subtitles of different language codes can be added to the
                video

                *   Multiple watermarks can be added

                *   Only part of a video can be transcoded for streaming

                *   Video can be tagged and meta-data can be linked
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateContent"
                            example:
                                title: Demo Video
                                description: This is a demo video
                                video:
                                    - url: >-
                                        https://thepaciellogroup.github.io/AT-browser-tests/video/ElephantsDream.mp4
                                watermark:
                                    - url: > 
                                        https://dashboard.videograph.ai/images/logo.svg
                                      x_pos: 1564px
                                      y_pos: 74px
                                      opacity: 70%
                                subtitle:
                                    - url: >
                                        https://thepaciellogroup.github.io/AT-browser-tests/video/subtitles-en.vtt
                                      name: English US
                                      language_code: en_US
                                      support_closed_captions: false
                                tags:
                                    - Animation
                                    - Video demo
                                metadata:
                                    key: color
                                    value: blue
                                playback_policy:
                                    - public
                                mp4_support: true
                                save_original_copy: false
                                test_video: true
                                
            security:
                - basicAuth: []
            parameters:
                - name: Accept
                  in: header
                  schema:
                      type: string
                  example: application/json
            responses:
                "201":
                    description: Created
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                status: Success
                                message: Triggered processing of videos.
                                code: 201
                                data:
                                    title: Video title
                                    description: Video description
                                    contentId: ""
                                    tags:
                                        - tag1
                                        - tag2
                                    metadata:
                                        - key: abc
                                          value: pqr
                                    playback_policy:
                                        - public
                                        - signed
                                    mp4_support: true
                                    save_original_copy: true
                                    statusId: 1
                                    status: Processing
                                    duration: 100
                                    thumbnails: []
                                    created_at: 0
        get:
            tags:
                - Contents
            summary: List Contents
            description: >-
                Lists all contents in the api token's organization environment in the
                order of latest created
            security:
                - basicAuth: []
            parameters:
                - name: Accept
                  in: header
                  schema:
                      type: string
                  example: application/json
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                code: 200
                                data:
                                    - contentId: 80e05adf-3d5c-4f10-81b7-a9227587b9ca
                                      created_at: 1653903574348
                                      description: Video description
                                      duration: 1800000
                                      playbackPolicy:
                                          - public
                                          - signed
                                      playbackUrl: >-
                                          https://videographond.akamaized.net/enc/eac6be40-42de-40da-8c4a-6d9f2b8b9ba9/ba8693b0-20bb-4c62-8689-72528439ff45/yupptv/2228/master.m3u8
                                      resolution: 1080P
                                      status: Ready
                                      statusId: 3
                                      thumbnailUrl: >-
                                          https://videographond.akamaized.net/thumb/enc/eac6be40-42de-40da-8c4a-6d9f2b8b9ba9/ba8693b0-20bb-4c62-8689-72528439ff45/yupptv/2228/mp4/image/0.jpg
                                      title: Phani Test Review
                                    - contentId: a3334a0e-dee3-4f78-8c42-362fa4113dbc
                                      created_at: 1653903150379
                                      description: Video description
                                      playbackPolicy:
                                          - public
                                          - signed
                                      status: Failed
                                      statusId: 4
                                      thumbnailUrl: ""
                                      title: Phani Test Review
                                    - contentId: 37d091b5-d4b5-4ac2-922a-659f1ce43f3b
                                      created_at: 1653902189055
                                      description: ""
                                      playbackPolicy:
                                          - ""
                                      status: Failed
                                      statusId: 4
                                      thumbnailUrl: ""
                                      title: test_video
                                    - contentId: 855a5b1e-a2ab-4a53-88f2-2cfcf5ca726a
                                      created_at: 1653901844754
                                      description: Video description
                                      playbackPolicy:
                                          - public
                                          - signed
                                      status: Failed
                                      statusId: 4
                                      thumbnailUrl: ""
                                      title: Phani Test Review
                                    - contentId: efd809c9-8a3e-4603-a486-d8cd8021daa4
                                      created_at: 1653892933509
                                      description: Video description
                                      playbackPolicy:
                                          - public
                                          - signed
                                      status: Failed
                                      statusId: 4
                                      thumbnailUrl: ""
                                      title: Phani Test Review
                                    - contentId: 61037b69-7e07-4e02-8630-b1b22248d976
                                      created_at: 1653891136586
                                      description: ""
                                      playbackPolicy:
                                          - ""
                                      status: Failed
                                      statusId: 4
                                      thumbnailUrl: ""
                                      title: test video
                                    - contentId: 298654bf-fdcc-4071-a786-ffecef6d551d
                                      created_at: 1653733660189
                                      description: Video description
                                      playbackPolicy:
                                          - public
                                          - signed
                                      status: Failed
                                      statusId: 4
                                      thumbnailUrl: ""
                                      title: Phani Test Review
                                    - contentId: f72cec7a-b412-4ceb-a46e-636cd2e07a40
                                      created_at: 1653628947976
                                      description: Video description
                                      playbackPolicy:
                                          - public
                                          - signed
                                      status: Failed
                                      statusId: 4
                                      thumbnailUrl: ""
                                      title: Phani Test Review
                                    - contentId: 20c2b219-b8de-40b7-96f0-3338333d9cb8
                                      created_at: 1653546627935
                                      description: Video description
                                      playbackPolicy:
                                          - public
                                          - signed
                                      status: Failed
                                      statusId: 4
                                      thumbnailUrl: ""
                                      title: Phani Test Review
                                    - contentId: 02d99175-2e35-43db-8003-c37634cbdfdc
                                      created_at: 1653546496877
                                      description: Video description
                                      playbackPolicy:
                                          - public
                                          - signed
                                      status: Failed
                                      statusId: 4
                                      thumbnailUrl: ""
                                      title: Phani Test Review
                                message: Fetched all video assets in the environment.
                                status: Success
    /video/services/api/v1/contents/{CONTENT_ID}:
        put:
            tags:
                - Contents
            summary: Update Content
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UpdateContent"
            security:
                - basicAuth: []
            parameters:
                - name: CONTENT_ID
                  in: path
                  schema:
                      type: string
                  required: true
                  description: Content UUID
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                status: Success
                                message: Updated video details
                                code: 200
                                data:
                                    title: Video title
                                    description: Video description
                                    contentId: ""
                                    tags:
                                        - tag1
                                        - tag2
                                    metadata:
                                        - key: abc
                                          value: pqr
                                    playback_policy:
                                        - public
                                        - signed
                                    mp4_support: true
                                    save_original_copy: true
                                    statusId: 1
                                    status: Processing
                                    duration: 100
                                    thumbnails: []
                                    created_at: 0
        get:
            tags:
                - Contents
            summary: Get Content Details
            security:
                - basicAuth: []
            parameters:
                - name: CONTENT_ID
                  in: path
                  schema:
                      type: string
                  required: true
                  description: Content UUID
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                status: Success
                                message: Updated video details
                                code: 200
                                data:
                                    title: Video title
                                    description: Video description
                                    contentId: ""
                                    tags:
                                        - tag1
                                        - tag2
                                    metadata:
                                        - key: abc
                                          value: pqr
                                    playback_policy:
                                        - public
                                        - signed
                                    mp4_support: true
                                    save_original_copy: true
                                    statusId: 1
                                    status: Processing
                                    duration: 100
                                    thumbnails: []
                                    created_at: 0
        delete:
            tags:
                - Contents
            summary: Delete Content
            security:
                - basicAuth: []
            parameters:
                - name: CONTENT_ID
                  in: path
                  schema:
                      type: string
                  required: true
                  description: Content UUID
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                status: Success
                                message: Deleted video
                                code: 200
    /video/services/api/v1/contents/{CONTENT_ID}/clips:
        post:
            tags:
                - Content Clips
            summary: Create Content clip
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateContentClip"
            security:
                - basicAuth: []
            parameters:
                - name: CONTENT_ID
                  in: path
                  schema:
                      type: string
                  required: true
                  description: Content UUID
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                status: Success
                                message: Updated video details
                                code: 200
                                data:
                                    title: Video title
                                    description: Video description
                                    contentId: ""
                                    tags:
                                        - tag1
                                        - tag2
                                    metadata:
                                        - key: abc
                                          value: pqr
                                    playback_policy:
                                        - public
                                        - signed
                                    mp4_support: true
                                    save_original_copy: true
                                    statusId: 1
                                    status: Processing
                                    duration: 100
                                    thumbnails: []
                                    created_at: 0
        get:
            tags:
                - Content Clips
            summary: List a content clips
            security:
                - basicAuth: []
            parameters:
                - name: CONTENT_ID
                  in: path
                  schema:
                      type: string
                  required: true
                  description: Content UUID
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                status: Success
                                message: Updated video details
                                code: 200
                                data:
                                    - uuid: "clip uuid"
                                      name: "clip name"
                                      createdOn: 0
                                    - uuid: "clip uuid"
                                      name: "clip name"
                                      createdOn: 0
    /video/services/api/v1/contents/{CONTENT_ID}/subtitles:
        post:
            tags:
                - Content Subtitles
            summary: Create Content Subtitle
            description: >-
                Associates the provided subtitle for the content with the mentioned
                `language_code`


                If a new subtitle is uploaded with the same `language_code`, existing
                one is replaced with the new one
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Subtitle"
            security:
                - basicAuth: []
            parameters:
                - name: Accept
                  in: header
                  schema:
                      type: string
                  example: application/json
                - name: CONTENT_ID
                  in: path
                  schema:
                      type: string
                  required: true
                  description: Content UUID
            responses:
                "201":
                    description: Created
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                status: Success
                                message: Updated video details
                                code: 200
                                data:
                                    url: >-
                                        https://d133d5ts749j6w.cloudfront.net/ane/HSHM2586532201040000_ACTA_HD.scc
                                    name: English US
                                    language_code: en_US
                                    support_closed_captions: false
                                    uuid: subtitleid
        get:
            tags:
                - Content Subtitles
            summary: List Content subtitles
            description: Lists all subtitles associated with a content
            security:
                - basicAuth: []
            parameters:
                - name: Accept
                  in: header
                  schema:
                      type: string
                  example: application/json
                - name: CONTENT_ID
                  in: path
                  schema:
                      type: string
                  required: true
                  description: Content UUID
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                status: Success
                                message: Updated video details
                                code: 200
                                data:
                                    - url: >-
                                          https://d133d5ts749j6w.cloudfront.net/ane/HSHM2586532201040000_ACTA_HD.scc
                                      name: English US
                                      language_code: en_US
                                      support_closed_captions: false
                                      uuid: subtitleid
    /video/services/api/v1/contents/{CONTENT_ID}/subtitles/{SUBTITLE_ID}:
        get:
            tags:
                - Content Subtitles
            summary: Get Content Subtitle Details
            description: >-
                Details of the subtitle associated with the content can be retrieved
                using subtitle uuid
            security:
                - basicAuth: []
            parameters:
                - name: CONTENT_ID
                  in: path
                  schema:
                      type: string
                  required: true
                  description: Content UUID
                - name: SUBTITLE_ID
                  in: path
                  schema:
                      type: string
                  required: true
                  description: Subtitle UUID
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                status: Success
                                message: Updated video details
                                code: 200
                                data:
                                    url: >-
                                        https://d133d5ts749j6w.cloudfront.net/ane/HSHM2586532201040000_ACTA_HD.scc
                                    name: English US
                                    language_code: en_US
                                    support_closed_captions: false
                                    uuid: subtitleid
        delete:
            tags:
                - Content Subtitles
            summary: Delete Content Subtitle
            description: >-
                Content subtitle can be disassociated or removed from a content using
                subtitle's uuid
            security:
                - basicAuth: []
            parameters:
                - name: CONTENT_ID
                  in: path
                  schema:
                      type: string
                  required: true
                  description: Content UUID
                - name: SUBTITLE_ID
                  in: path
                  schema:
                      type: string
                  required: true
                  description: Subtitle UUID
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                status: Success
                                message: Updated video details
                                code: 200
    /video/services/api/v1/contents/{CONTENT_ID}/thumbnails:
        post:
            tags:
                - Content Thumbnails
            summary: Create and set default thumbnail
            description: >-
                This is is to create a thumbnail of specified dimensions with the frame
                of video at the given position in sec. Generated thumbnail gets assigned
                as default thumbnail immediately to the content
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateContentThumbnail"
            security:
                - basicAuth: []
            parameters:
                - name: CONTENT_ID
                  in: path
                  schema:
                      type: string
                  required: true
                  description: Content UUID
            responses:
                "201":
                    description: Created
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                status: Success
                                message: Thumbnail created
                                code: 201
    /video/services/api/v1/uploads:
        post:
            tags:
                - Content Direct Uploads
            summary: Create direct Upload
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateDirectUpload"
            security:
                - basicAuth: []
            parameters:
                - name: Content-Type
                  in: header
                  schema:
                      type: string
                  example: application/json
                - name: Accept
                  in: header
                  schema:
                      type: string
                  example: application/json
            responses:
                "201":
                    description: Created
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                id: zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc
                                url: >-
                                    https://yupptv-metadata.s3.ap-southeast-1.amazonaws.com/phani/config.json?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20220310T110243Z&X-Amz-SignedHeaders=host&X-Amz-Expires=3599&X-Amz-Credential=AKIAJ5T7RG5NGGV727JA%2F20220310%2Fap-southeast-1%2Fs3%2Faws4_request&X-Amz-Signature=4aa631e30076814c2555b2024b8634064df7c185f5aada4a80ee5ce40411f6a1
                                cors_origin: https://example.com/
                                timeout: 3600
                                status: Waiting
        get:
            tags:
                - Content Direct Uploads
            summary: List All direct uploads
            security:
                - basicAuth: []
            parameters:
                - name: Accept
                  in: header
                  schema:
                      type: string
                  example: application/json
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                - id: zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc
                                  url: >-
                                      https://yupptv-metadata.s3.ap-southeast-1.amazonaws.com/phani/config.json?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20220310T110243Z&X-Amz-SignedHeaders=host&X-Amz-Expires=3599&X-Amz-Credential=AKIAJ5T7RG5NGGV727JA%2F20220310%2Fap-southeast-1%2Fs3%2Faws4_request&X-Amz-Signature=4aa631e30076814c2555b2024b8634064df7c185f5aada4a80ee5ce40411f6a1
                                  cors_origin: https://example.com/
                                  timeout: 3600
                                  status: Waiting
                                - id: zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc
                                  url: >-
                                      https://yupptv-metadata.s3.ap-southeast-1.amazonaws.com/phani/config.json?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20220310T110243Z&X-Amz-SignedHeaders=host&X-Amz-Expires=3599&X-Amz-Credential=AKIAJ5T7RG5NGGV727JA%2F20220310%2Fap-southeast-1%2Fs3%2Faws4_request&X-Amz-Signature=4aa631e30076814c2555b2024b8634064df7c185f5aada4a80ee5ce40411f6a1
                                  cors_origin: https://example.com/
                                  timeout: 3600
                                  status: Ready
                                  assetId: assetuuid
    /video/services/api/v1/uploads/{UPLOAD_ID}:
        get:
            tags:
                - Content Direct Uploads
            summary: Get Direct upload
            security:
                - basicAuth: []
            parameters:
                - name: Accept
                  in: header
                  schema:
                      type: string
                  example: application/json
                - name: UPLOAD_ID
                  in: path
                  schema:
                      type: string
                  required: true
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                id: zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc
                                url: >-
                                    https://yupptv-metadata.s3.ap-southeast-1.amazonaws.com/phani/config.json?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20220310T110243Z&X-Amz-SignedHeaders=host&X-Amz-Expires=3599&X-Amz-Credential=AKIAJ5T7RG5NGGV727JA%2F20220310%2Fap-southeast-1%2Fs3%2Faws4_request&X-Amz-Signature=4aa631e30076814c2555b2024b8634064df7c185f5aada4a80ee5ce40411f6a1
                                cors_origin: https://example.com/
                                timeout: 3600
                                status: Waiting
        delete:
            tags:
                - Content Direct Uploads
            summary: Delete/Cancel Upload
            security:
                - basicAuth: []
            parameters:
                - name: Accept
                  in: header
                  schema:
                      type: string
                  example: application/json
                - name: UPLOAD_ID
                  in: path
                  schema:
                      type: string
                  required: true
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                id: zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc
                                url: >-
                                    https://yupptv-metadata.s3.ap-southeast-1.amazonaws.com/phani/config.json?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20220310T110243Z&X-Amz-SignedHeaders=host&X-Amz-Expires=3599&X-Amz-Credential=AKIAJ5T7RG5NGGV727JA%2F20220310%2Fap-southeast-1%2Fs3%2Faws4_request&X-Amz-Signature=4aa631e30076814c2555b2024b8634064df7c185f5aada4a80ee5ce40411f6a1
                                cors_origin: https://example.com/
                                timeout: 3600
                                status: Cancelled
    /video/services/api/v1/signing-keys:
        post:
            tags:
                - URL Signing Keys
            summary: Create Signing Key
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/SigningKey"
            security:
                - basicAuth: []
            parameters:
                - name: Accept
                  in: header
                  schema:
                      type: string
                  example: application/json
                - name: Content-Type
                  in: header
                  schema:
                      type: string
                  example: application/json
            responses:
                "201":
                    description: Created
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                status: Success
                                message: Generated signing key for environment.
                                code: 201
                                data:
                                    uuid: 1
                                    signingKeyId: vxdYecwma5FhGVVT4pyALK9gq4XbPOS9v02Vfp6ZnAj00
                                    privateKey: >-
                                        LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMDRaY081aUh6dmU3WVVlRHRTNGtNamtCVXh0VXEzK1hpdHlPMGdTbTVtSUdPV0ZNClQ0L2MvVUdkMDFHRllDVUdSMkhPQVhYVTl4TmN3N1pXaytzVUpxWUdnRW9BN3JUZHJoL3RONytjL1AvdGFWTlgKd1dXYWVZSjhLTCtHK2V2cW03TlN3YWwwVG5aaTRqUE1yT1lmWlBjN285aS8vNS9RVk5BN0UrdlVJYUt0dDlLNwo0UTVUazY0L2FqakpxMnU1eW10TTZCMng3dFgvcWNydjVLc3J5dmJBUlVVSzdlSC8vU1JXSXNscDdlMUlNK3NTCnROOUNTeTN3dHNpTkJYQzhZQXlvSmh4SUNrMng3dmtadFpibjVWZW9uMG95VVU5V0NaRU9ZK2tieFFZdUxNYkYKRnoyZXd3K0R3bU9wSWNxVmVBK09nZE1RQ0dPQU9yenp5bXlWOHdJREFRQUJBb0lCQVFDRW43TEd2dzB2ekk0VgpJV1RJUGNUK0pGWGJTTUNld3VJK2M2bXNyclFDc1NWYjV0Q1U5Z3ZHVXRUbEFURVNKa1M0anU4K1pTWUJRSWVpClFub29SbldkQWU0RGsrTGZ5RkZSOHJ5bWZxS3MwcjZGa25ic1VJczVjb0hzZnFIZm8zYTI1d21WV1cwT0lSWkEKNDkrSjdNTjBaN3RpTU8yNUZmZm1wYVRWQ2NFNDBJVVk0VzYranZibExjQ0NIR0ljelJITW1JT01wdEQ5aHgvaAorc0lWV2h2K1FEUlMvRkNzVkhRTXBTQjV5Um15WTUrb0FQODVUeXJSZHl6VWtnOFM3MnY4aXRQWG40SlBxWnpSCnJmZ0p4Rm0zbEpNRGpTdFNBYnR2aWkxU1l5V3ByM2ZBaXZ2VTljeU5jdjhxZ3FZK0hhUG5kaEJGSVJVbkJmL0gKQ1lpcmhCbkJBb0dCQU5WYjIzMGJyNGt5UmxISTZMWEtYMlEvdlhTa1ZSRVRtdFlvWWZ0bkZtYml3Z0laSHFpSgpxbWNxUXg0MGs5azQxSlZLQ2I0RWVmZTNsOENFYklZSFM0cTl5dmR2VlUrWURiRFVEeDFodWJua05NeDFSRVY3CjBGblJaUEhiR3Z5K1ByeitqMUVNdGd5NTNScFQvSGxHR2J5WG1ZYW1nakErRFNyRzFlZW5HV1NoQW9HQkFQM00KcTdob01mR1NzQ1NhNitKYTVxMERtTDRjSWh0ZVg1c0N0aEIwNkZ5MmllUldNdThRQXIwWU9jSnh2Y0J1MW9LaQpBWWhjQUNuNGVHYURHSUJ5dG8rS09uWUVnNCsrR2dYVStmeDZrQkxDd0t1Ykxja3ovTHlOZHVYc25VQ095eEpQCkUxOWg3dis3eU9vRjZEeitITm9FS25MNEcrOTd1QTlib21zeU4xNFRBb0dCQU1NaVh3eitYRDRMZUJybXVFZEQKanBrZVhzVW1ZeExhTGx1OTFWZGNRalhaSUgxUXdpUjh2QmZjcEVRazdDL1lkVDBRMlBZc0creit3ZEQyakZiTQpwejkrTS9xM25Ydk5Zb0FlZ3JCcHA3YW5TODdQVmFDREM5eUowVndOKzVHNjRhQnk1VnJJV0Z3dFJWWUdDRHhXCmE4VjdsWk44Q0VmZENLZmQ4TmNNa2dIaEFvR0JBUEpFVUZzc1l4aGxYT3prVVd6Mk5xSksvNS9odlJFQkNpUXUKOTFwSUxwSnAwTUQ5STR1ZWJlN1JWRGx2VjZGOGJCbXd5ZU8vWm95cDJVeUpzWGJUaWI4RlJQN3BHaWk1WDUvWAppSFhoRE94THFaMWwrTlBLWTJRZGFiVGJJOVMvT2N1VlhqbTdnMmZzZWtJaU4ya1piTE1VTE8wb040cG9QKyt4CkdoNVhoaEN2QW9HQWN0UTc2WWdMNmlwR2lneDlPZDRxd1NST2pSd1BPZWZZVEdhNEk1ZWpZS3B6UDhJL01zTTQKY3FNR1pQT3N6YjlzdTFLRVlPSHp5UkxOcTJwZThvVTY3dm8yeStNS1hzUFJTV2xxWUpjYWFOd3NKczVac0kraQptNUtVQVAybDI5R0JJVWlFcUVndzBKQnJIa0FBb3dTcTdiRm44SUZoL04zNCszN0IvRzhCSEtzPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
                                    createdOn: 1644333573405
        get:
            tags:
                - URL Signing Keys
            summary: List Signing Keys
            security:
                - basicAuth: []
            parameters:
                - name: Accept
                  in: header
                  schema:
                      type: string
                  example: application/json
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                status: Success
                                message: Lists all signing keys for environment and prooduct.
                                code: 200
                                data:
                                    - id: 1
                                      productTypeId: 1
                                      environmentId: 1
                                      signingKeyId: vxdYecwma5FhGVVT4pyALK9gq4XbPOS9v02Vfp6ZnAj00
                                      createdOn: 1644333573405
                                      createdBy: ntrphanikumar@yupptv.com
                                    - id: 2
                                      productTypeId: 2
                                      environmentId: 1
                                      signingKeyId: 4Riv83rZ4EYc3XeMGQt01ME3Z6MOtXAGX6Gy5F9lyFAU
                                      createdOn: 1644333573405
                                      createdBy: ntrphanikumar@yupptv.com
    /video/services/api/v1/signing-keys/{SIGNING_KEY_ID}:
        get:
            tags:
                - URL Signing Keys
            summary: Get Signing Key Details
            security:
                - basicAuth: []
            parameters:
                - name: Accept
                  in: header
                  schema:
                      type: string
                  example: application/json
                - name: SIGNING_KEY_ID
                  in: path
                  schema:
                      type: string
                  required: true
                  description: Signing Key UUID
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                status: Success
                                message: Lists all signing keys for environment and prooduct.
                                code: 200
                                data:
                                    - id: 1
                                      productTypeId: 1
                                      environmentId: 1
                                      signingKeyId: vxdYecwma5FhGVVT4pyALK9gq4XbPOS9v02Vfp6ZnAj00
                                      createdOn: 1644333573405
                                      createdBy: ntrphanikumar@yupptv.com
                                    - id: 2
                                      productTypeId: 2
                                      environmentId: 1
                                      signingKeyId: 4Riv83rZ4EYc3XeMGQt01ME3Z6MOtXAGX6Gy5F9lyFAU
                                      createdOn: 1644333573405
                                      createdBy: ntrphanikumar@yupptv.com
        delete:
            tags:
                - URL Signing Keys
            summary: Delete Signing Key
            security:
                - basicAuth: []
            parameters:
                - name: Accept
                  in: header
                  schema:
                      type: string
                  example: application/json
                - name: SIGNING_KEY_ID
                  in: path
                  schema:
                      type: string
                  required: true
                  description: Signing Key UUID
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                status: Success
                                message: Deleted signing key successfully.
                                code: 200
    /video/services/api/v1/livestreams:
        post:
            tags:
                - Live Streams
            summary: Create Livestream/Recording
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateLiveStream"
            security:
                - basicAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
        get:
            tags:
                - Live Streams
            summary: List Livestreams
            security:
                - basicAuth: []
            parameters:
                - name: record
                  in: query
                  description: true for liverecordings and false for livestreams
                  required: true
                  schema:
                      type: boolean
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                code: 200
                                data:
                                    - created_at: 1672715707376
                                      status: Initializing
                                      statusId: 1
                                      streamUUID: b7ce0bf9-c139-40f4-9306-753a534912c6
                                    - created_at: 1667282138558
                                      status: Idle
                                      statusId: 3
                                      streamUUID: cb570748-c6c8-4f5b-8b69-330f6af0bb37
                                message: "List live streams by record: true"
                                status: Success
    /video/services/api/v1/livestreams/{STREAM_ID}:
        get:
            tags:
                - Live Streams
            summary: Get Livestream
            security:
                - basicAuth: []
            parameters:
                - name: STREAM_ID
                  in: path
                  schema:
                      type: string
                  required: true
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                code: 200
                                data:
                                    createdOn: 1672715707376
                                    metadata:
                                        - key: AdditionalExternalId
                                          value: "503962"
                                    playbackUrl: >-
                                        http://rc-1.ind.videograph.ai/vglive/503962/playlist_dvr.m3u8
                                    rtmpUrl: rtmp://rc-ingest.us.videograph.ai/rec/J7QCHBsR
                                    rtmpsUrl: ""
                                    status: Idle
                                    streamKey: "503962"
                                    streamUUID: b7ce0bf9-c139-40f4-9306-753a534912c6
                                    title: First Channel
                                message: >-
                                    Livestream details with id:
                                    b7ce0bf9-c139-40f4-9306-753a534912c6
                                status: Success
        put:
            tags:
                - Live Streams
            summary: Update Livestream
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UpdateLiveStream"
            security:
                - basicAuth: []
            parameters:
                - name: STREAM_ID
                  in: path
                  schema:
                      type: string
                  required: true
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
        delete:
            tags:
                - Live Streams
            summary: Delete Livestream
            security:
                - basicAuth: []
            parameters:
                - name: STREAM_ID
                  in: path
                  schema:
                      type: string
                  required: true
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                code: 200
                                data:
                                    createdOn: 1672715707376
                                    metadata:
                                        - key: AdditionalExternalId
                                          value: "503962"
                                    playbackUrl: >-
                                        http://rc-1.ind.videograph.ai/vglive/503962/playlist_dvr.m3u8
                                    rtmpUrl: rtmp://rc-ingest.us.videograph.ai/rec/J7QCHBsR
                                    rtmpsUrl: ""
                                    status: Deleting
                                    streamKey: "503962"
                                    streamUUID: b7ce0bf9-c139-40f4-9306-753a534912c6
                                    title: First Channel
                                message: Updated livestream b7ce0bf9-c139-40f4-9306-753a534912c6
                                status: Success
    /video/services/api/v1/livestreams/{STREAM_ID}/start:
        post:
            tags:
                - Live Streams
            summary: Start Livestream
            requestBody:
                content: {}
            security:
                - basicAuth: []
            parameters:
                - name: STREAM_ID
                  in: path
                  schema:
                      type: string
                  required: true
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                code: 200
                                data:
                                    createdOn: 1672715707376
                                    metadata:
                                        - key: AdditionalExternalId
                                          value: "503962"
                                    playbackUrl: >-
                                        http://rc-1.ind.videograph.ai/vglive/503962/playlist_dvr.m3u8
                                    rtmpUrl: rtmp://rc-ingest.us.videograph.ai/rec/J7QCHBsR
                                    rtmpsUrl: ""
                                    status: Processing (Stream Idle)
                                    streamKey: "503962"
                                    streamUUID: b7ce0bf9-c139-40f4-9306-753a534912c6
                                    title: First Channel
                                message: >-
                                    Started livestream with id:
                                    b7ce0bf9-c139-40f4-9306-753a534912c6
                                status: Success
    /video/services/api/v1/livestreams/{STREAM_ID}/stop:
        post:
            tags:
                - Live Streams
            summary: Stop Livestream
            requestBody:
                content: {}
            security:
                - basicAuth: []
            parameters:
                - name: STREAM_ID
                  in: path
                  schema:
                      type: string
                  required: true
            responses:
                "200":
                    description: OK
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                code: 200
                                data:
                                    createdOn: 1672715707376
                                    metadata:
                                        - key: AdditionalExternalId
                                          value: "503962"
                                    playbackUrl: >-
                                        http://rc-1.ind.videograph.ai/vglive/503962/playlist_dvr.m3u8
                                    rtmpUrl: rtmp://rc-ingest.us.videograph.ai/rec/J7QCHBsR
                                    rtmpsUrl: ""
                                    status: Processing (Stream Running)
                                    streamKey: "503962"
                                    streamUUID: b7ce0bf9-c139-40f4-9306-753a534912c6
                                    title: First Channel
                                message: >-
                                    Started livestream with id:
                                    b7ce0bf9-c139-40f4-9306-753a534912c6
                                status: Success
    /video/services/api/v1/livestreams/{STREAM_ID}/clips:
        post:
            tags:
                - Live Streams
            summary: Create Clip from Recording
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateLiveStreamClip"
            security:
                - basicAuth: []
            parameters:
                - name: STREAM_ID
                  in: path
                  schema:
                      type: string
                  required: true
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
        get:
            tags:
                - Live Streams
            summary: List Livestream Clips
            security:
                - basicAuth: []
            parameters:
                - name: STREAM_ID
                  in: path
                  schema:
                      type: string
                  required: true
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
